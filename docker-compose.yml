version: '3'
services:
  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    restart: always
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_ADMINSERVER_ENABLED: "false"
    volumes:
      - "zookeeper-data:/data"
      - "zookeeper-datalog:/datalog"
    networks:
      - spectrum-network
  kafka:
    image: bitnami/kafka:2
    container_name: kafka
    restart: always
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - "kafka-data:/bitnami/kafka"
    depends_on:
      - zookeeper
    networks:
      - spectrum-network
  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "redis-data:/data"
    networks:
      - spectrum-network
  utxo-tracker:
    build:
      context: ./modules/utxo-tracker/target/docker/stage
      dockerfile: Dockerfile
    container_name: utxo-tracker
    volumes:
      - "log-data:/var/log/dex-backend"
    env_file: config.env
    depends_on:
      - kafka
      - redis
    networks:
      - spectrum-network
  amm-executor:
    build:
      context: ./modules/amm-executor/target/docker/stage
      dockerfile: Dockerfile
    container_name: amm-executor
    restart: always
    volumes:
      - "log-data:/var/log/dex-backend"
    env_file: config.env
    depends_on:
      - kafka
      - poolresolver
    networks:
      - spectrum-network
  poolresolver:
    build:
      context: ./modules/pool-resolver/target/docker/stage
      dockerfile: Dockerfile
    container_name: poolresolver
    volumes:
      - "log-data:/var/log/dex-backend"
      - "poolresolver-data:/var/lib/pool-resolver:Z"
    env_file: config.env
    ports:
      - "9876:9876"
    depends_on:
      - kafka
    networks:
      - spectrum-network

networks:
  spectrum-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  poolresolver-data:
    driver: local
  log-data:
    driver: local
  zookeeper-data:
    driver: local
  zookeeper-datalog:
    driver: local
  kafka-data:
    driver: local
